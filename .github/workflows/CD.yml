name: CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up JDK 11 job has success
        if: ${{ success() }}
        run: echo "üéâ Set up JDK 11 job has success"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Set up resources/** secrets from s3 bucket
        run: aws s3 cp --region ap-northeast-2 --acl private s3://goms-server-properties-bucket/application-resource-secret/ ./src/main/resources --recursive

      - name: Set up secret resources success üéâ
        if: ${{ success() }}
        run: echo "üéâ Set up secret resources success"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon

      - name: Build with Gradle job has success
        if: ${{ success() }}
        run: echo "üéâ Build with Gradle job has success"

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://goms-server-bucket/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --application-name goms-codedeploy \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name goms-prod-codedeploy \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=goms-server-bucket,bundleType=zip,key=$GITHUB_SHA.zip \
          --region ap-northeast-2 \

      - name: GOMS Backend CD success Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ success() }}
        with:
          title: üéâ GOMS Server CD success üéâ
          webhook: ${{ secrets.DISCORD_WEBHOOK_CI_BOT }}
          color: 00FF00

      - name: GOMS Backend CD failure Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          title: ‚ùå GOMS Server CD failed ‚ùå
          webhook: ${{ secrets.DISCORD_WEBHOOK_CI_BOT }}
          color: FF0000